#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pixir.Not.Data.Entity
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ManualPersona")]
	public partial class DcGeneralDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertComCatEstadoCivil(ComCatEstadoCivil instance);
    partial void UpdateComCatEstadoCivil(ComCatEstadoCivil instance);
    partial void DeleteComCatEstadoCivil(ComCatEstadoCivil instance);
    partial void InsertComCatEstadoRegistro(ComCatEstadoRegistro instance);
    partial void UpdateComCatEstadoRegistro(ComCatEstadoRegistro instance);
    partial void DeleteComCatEstadoRegistro(ComCatEstadoRegistro instance);
    partial void InsertComCatNacionalidad(ComCatNacionalidad instance);
    partial void UpdateComCatNacionalidad(ComCatNacionalidad instance);
    partial void DeleteComCatNacionalidad(ComCatNacionalidad instance);
    partial void InsertComCatOcupacion(ComCatOcupacion instance);
    partial void UpdateComCatOcupacion(ComCatOcupacion instance);
    partial void DeleteComCatOcupacion(ComCatOcupacion instance);
    partial void InsertComCatRegimenMatrimonial(ComCatRegimenMatrimonial instance);
    partial void UpdateComCatRegimenMatrimonial(ComCatRegimenMatrimonial instance);
    partial void DeleteComCatRegimenMatrimonial(ComCatRegimenMatrimonial instance);
    partial void InsertComCatSexo(ComCatSexo instance);
    partial void UpdateComCatSexo(ComCatSexo instance);
    partial void DeleteComCatSexo(ComCatSexo instance);
    partial void InsertComCatTipoDatoContacto(ComCatTipoDatoContacto instance);
    partial void UpdateComCatTipoDatoContacto(ComCatTipoDatoContacto instance);
    partial void DeleteComCatTipoDatoContacto(ComCatTipoDatoContacto instance);
    partial void InsertComDatoContacto(ComDatoContacto instance);
    partial void UpdateComDatoContacto(ComDatoContacto instance);
    partial void DeleteComDatoContacto(ComDatoContacto instance);
    partial void InsertComPersona(ComPersona instance);
    partial void UpdateComPersona(ComPersona instance);
    partial void DeleteComPersona(ComPersona instance);
    #endregion
		
		public DcGeneralDataContext() : 
				base(global::Pixir.Not.Data.Properties.Settings.Default.ManualPersonaConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DcGeneralDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ComCatEstadoCivil> ComCatEstadoCivil
		{
			get
			{
				return this.GetTable<ComCatEstadoCivil>();
			}
		}
		
		public System.Data.Linq.Table<ComCatEstadoRegistro> ComCatEstadoRegistro
		{
			get
			{
				return this.GetTable<ComCatEstadoRegistro>();
			}
		}
		
		public System.Data.Linq.Table<ComCatNacionalidad> ComCatNacionalidad
		{
			get
			{
				return this.GetTable<ComCatNacionalidad>();
			}
		}
		
		public System.Data.Linq.Table<ComCatOcupacion> ComCatOcupacion
		{
			get
			{
				return this.GetTable<ComCatOcupacion>();
			}
		}
		
		public System.Data.Linq.Table<ComCatRegimenMatrimonial> ComCatRegimenMatrimonial
		{
			get
			{
				return this.GetTable<ComCatRegimenMatrimonial>();
			}
		}
		
		public System.Data.Linq.Table<ComCatSexo> ComCatSexo
		{
			get
			{
				return this.GetTable<ComCatSexo>();
			}
		}
		
		public System.Data.Linq.Table<ComCatTipoDatoContacto> ComCatTipoDatoContacto
		{
			get
			{
				return this.GetTable<ComCatTipoDatoContacto>();
			}
		}
		
		public System.Data.Linq.Table<ComDatoContacto> ComDatoContacto
		{
			get
			{
				return this.GetTable<ComDatoContacto>();
			}
		}
		
		public System.Data.Linq.Table<ComPersona> ComPersona
		{
			get
			{
				return this.GetTable<ComPersona>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatEstadoCivil")]
	public partial class ComCatEstadoCivil : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatEstadoCivil()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatEstadoCivil_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatEstadoCivil")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatEstadoCivil = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatEstadoCivil = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatEstadoRegistro")]
	public partial class ComCatEstadoRegistro : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatEstadoRegistro()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatEstadoRegistro_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatEstadoRegistro")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatEstadoRegistro = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatEstadoRegistro = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatNacionalidad")]
	public partial class ComCatNacionalidad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatNacionalidad()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatNacionalidad_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatNacionalidad")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatNacionalidad = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatNacionalidad = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatOcupacion")]
	public partial class ComCatOcupacion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatOcupacion()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatOcupacion_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatOcupacion")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatOcupacion = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatOcupacion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatRegimenMatrimonial")]
	public partial class ComCatRegimenMatrimonial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatRegimenMatrimonial()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatRegimenMatrimonial_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatRegimenMatrimonial")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatRegimenMatrimonial = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatRegimenMatrimonial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatSexo")]
	public partial class ComCatSexo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatSexo()
		{
			this._ComPersona = new EntitySet<ComPersona>(new Action<ComPersona>(this.attach_ComPersona), new Action<ComPersona>(this.detach_ComPersona));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatSexo_ComPersona", Storage="_ComPersona", ThisKey="id", OtherKey="idComCatSexo")]
		public EntitySet<ComPersona> ComPersona
		{
			get
			{
				return this._ComPersona;
			}
			set
			{
				this._ComPersona.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatSexo = this;
		}
		
		private void detach_ComPersona(ComPersona entity)
		{
			this.SendPropertyChanging();
			entity.ComCatSexo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComCatTipoDatoContacto")]
	public partial class ComCatTipoDatoContacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _strValor;
		
		private string _strDescripcion;
		
		private EntitySet<ComDatoContacto> _ComDatoContacto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstrValorChanging(string value);
    partial void OnstrValorChanged();
    partial void OnstrDescripcionChanging(string value);
    partial void OnstrDescripcionChanged();
    #endregion
		
		public ComCatTipoDatoContacto()
		{
			this._ComDatoContacto = new EntitySet<ComDatoContacto>(new Action<ComDatoContacto>(this.attach_ComDatoContacto), new Action<ComDatoContacto>(this.detach_ComDatoContacto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strValor", DbType="NVarChar(50)")]
		public string strValor
		{
			get
			{
				return this._strValor;
			}
			set
			{
				if ((this._strValor != value))
				{
					this.OnstrValorChanging(value);
					this.SendPropertyChanging();
					this._strValor = value;
					this.SendPropertyChanged("strValor");
					this.OnstrValorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDescripcion", DbType="NVarChar(200)")]
		public string strDescripcion
		{
			get
			{
				return this._strDescripcion;
			}
			set
			{
				if ((this._strDescripcion != value))
				{
					this.OnstrDescripcionChanging(value);
					this.SendPropertyChanging();
					this._strDescripcion = value;
					this.SendPropertyChanged("strDescripcion");
					this.OnstrDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatTipoDatoContacto_ComDatoContacto", Storage="_ComDatoContacto", ThisKey="id", OtherKey="idComCatTipoContacto")]
		public EntitySet<ComDatoContacto> ComDatoContacto
		{
			get
			{
				return this._ComDatoContacto;
			}
			set
			{
				this._ComDatoContacto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComDatoContacto(ComDatoContacto entity)
		{
			this.SendPropertyChanging();
			entity.ComCatTipoDatoContacto = this;
		}
		
		private void detach_ComDatoContacto(ComDatoContacto entity)
		{
			this.SendPropertyChanging();
			entity.ComCatTipoDatoContacto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComDatoContacto")]
	public partial class ComDatoContacto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _idComPersona;
		
		private System.Nullable<int> _idComCatTipoContacto;
		
		private string _strDatoContacto;
		
		private EntityRef<ComCatTipoDatoContacto> _ComCatTipoDatoContacto;
		
		private EntityRef<ComPersona> _ComPersona;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidComPersonaChanging(System.Nullable<int> value);
    partial void OnidComPersonaChanged();
    partial void OnidComCatTipoContactoChanging(System.Nullable<int> value);
    partial void OnidComCatTipoContactoChanged();
    partial void OnstrDatoContactoChanging(string value);
    partial void OnstrDatoContactoChanged();
    #endregion
		
		public ComDatoContacto()
		{
			this._ComCatTipoDatoContacto = default(EntityRef<ComCatTipoDatoContacto>);
			this._ComPersona = default(EntityRef<ComPersona>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComPersona", DbType="Int")]
		public System.Nullable<int> idComPersona
		{
			get
			{
				return this._idComPersona;
			}
			set
			{
				if ((this._idComPersona != value))
				{
					if (this._ComPersona.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComPersonaChanging(value);
					this.SendPropertyChanging();
					this._idComPersona = value;
					this.SendPropertyChanged("idComPersona");
					this.OnidComPersonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatTipoContacto", DbType="Int")]
		public System.Nullable<int> idComCatTipoContacto
		{
			get
			{
				return this._idComCatTipoContacto;
			}
			set
			{
				if ((this._idComCatTipoContacto != value))
				{
					if (this._ComCatTipoDatoContacto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatTipoContactoChanging(value);
					this.SendPropertyChanging();
					this._idComCatTipoContacto = value;
					this.SendPropertyChanged("idComCatTipoContacto");
					this.OnidComCatTipoContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strDatoContacto", DbType="NVarChar(200)")]
		public string strDatoContacto
		{
			get
			{
				return this._strDatoContacto;
			}
			set
			{
				if ((this._strDatoContacto != value))
				{
					this.OnstrDatoContactoChanging(value);
					this.SendPropertyChanging();
					this._strDatoContacto = value;
					this.SendPropertyChanged("strDatoContacto");
					this.OnstrDatoContactoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatTipoDatoContacto_ComDatoContacto", Storage="_ComCatTipoDatoContacto", ThisKey="idComCatTipoContacto", OtherKey="id", IsForeignKey=true)]
		public ComCatTipoDatoContacto ComCatTipoDatoContacto
		{
			get
			{
				return this._ComCatTipoDatoContacto.Entity;
			}
			set
			{
				ComCatTipoDatoContacto previousValue = this._ComCatTipoDatoContacto.Entity;
				if (((previousValue != value) 
							|| (this._ComCatTipoDatoContacto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatTipoDatoContacto.Entity = null;
						previousValue.ComDatoContacto.Remove(this);
					}
					this._ComCatTipoDatoContacto.Entity = value;
					if ((value != null))
					{
						value.ComDatoContacto.Add(this);
						this._idComCatTipoContacto = value.id;
					}
					else
					{
						this._idComCatTipoContacto = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComCatTipoDatoContacto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComPersona_ComDatoContacto", Storage="_ComPersona", ThisKey="idComPersona", OtherKey="id", IsForeignKey=true)]
		public ComPersona ComPersona
		{
			get
			{
				return this._ComPersona.Entity;
			}
			set
			{
				ComPersona previousValue = this._ComPersona.Entity;
				if (((previousValue != value) 
							|| (this._ComPersona.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComPersona.Entity = null;
						previousValue.ComDatoContacto.Remove(this);
					}
					this._ComPersona.Entity = value;
					if ((value != null))
					{
						value.ComDatoContacto.Add(this);
						this._idComPersona = value.id;
					}
					else
					{
						this._idComPersona = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComPersona");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ComPersona")]
	public partial class ComPersona : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _idComCatEstadoCivil;
		
		private System.Nullable<int> _idComCatRegimenMatrimonial;
		
		private System.Nullable<int> _idComCatOcupacion;
		
		private System.Nullable<int> _idComCatNacionalidad;
		
		private int _idComCatEstadoRegistro;
		
		private string _strNombre;
		
		private string _strAPaterno;
		
		private string _strAMaterno;
		
		private string _strNombreCompleto;
		
		private System.Nullable<System.DateTime> _dteFechaNacimiento;
		
		private int _idComCatSexo;
		
		private string _strCURP;
		
		private string _strFolioIFE;
		
		private string _strOriginario;
		
		private System.Nullable<bool> _bitDocEstancia;
		
		private EntitySet<ComDatoContacto> _ComDatoContacto;
		
		private EntityRef<ComCatEstadoCivil> _ComCatEstadoCivil;
		
		private EntityRef<ComCatEstadoRegistro> _ComCatEstadoRegistro;
		
		private EntityRef<ComCatNacionalidad> _ComCatNacionalidad;
		
		private EntityRef<ComCatOcupacion> _ComCatOcupacion;
		
		private EntityRef<ComCatRegimenMatrimonial> _ComCatRegimenMatrimonial;
		
		private EntityRef<ComCatSexo> _ComCatSexo;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnidComCatEstadoCivilChanging(int value);
    partial void OnidComCatEstadoCivilChanged();
    partial void OnidComCatRegimenMatrimonialChanging(System.Nullable<int> value);
    partial void OnidComCatRegimenMatrimonialChanged();
    partial void OnidComCatOcupacionChanging(System.Nullable<int> value);
    partial void OnidComCatOcupacionChanged();
    partial void OnidComCatNacionalidadChanging(System.Nullable<int> value);
    partial void OnidComCatNacionalidadChanged();
    partial void OnidComCatEstadoRegistroChanging(int value);
    partial void OnidComCatEstadoRegistroChanged();
    partial void OnstrNombreChanging(string value);
    partial void OnstrNombreChanged();
    partial void OnstrAPaternoChanging(string value);
    partial void OnstrAPaternoChanged();
    partial void OnstrAMaternoChanging(string value);
    partial void OnstrAMaternoChanged();
    partial void OnstrNombreCompletoChanging(string value);
    partial void OnstrNombreCompletoChanged();
    partial void OndteFechaNacimientoChanging(System.Nullable<System.DateTime> value);
    partial void OndteFechaNacimientoChanged();
    partial void OnidComCatSexoChanging(int value);
    partial void OnidComCatSexoChanged();
    partial void OnstrCURPChanging(string value);
    partial void OnstrCURPChanged();
    partial void OnstrFolioIFEChanging(string value);
    partial void OnstrFolioIFEChanged();
    partial void OnstrOriginarioChanging(string value);
    partial void OnstrOriginarioChanged();
    partial void OnbitDocEstanciaChanging(System.Nullable<bool> value);
    partial void OnbitDocEstanciaChanged();
    #endregion
		
		public ComPersona()
		{
			this._ComDatoContacto = new EntitySet<ComDatoContacto>(new Action<ComDatoContacto>(this.attach_ComDatoContacto), new Action<ComDatoContacto>(this.detach_ComDatoContacto));
			this._ComCatEstadoCivil = default(EntityRef<ComCatEstadoCivil>);
			this._ComCatEstadoRegistro = default(EntityRef<ComCatEstadoRegistro>);
			this._ComCatNacionalidad = default(EntityRef<ComCatNacionalidad>);
			this._ComCatOcupacion = default(EntityRef<ComCatOcupacion>);
			this._ComCatRegimenMatrimonial = default(EntityRef<ComCatRegimenMatrimonial>);
			this._ComCatSexo = default(EntityRef<ComCatSexo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatEstadoCivil", DbType="Int NOT NULL")]
		public int idComCatEstadoCivil
		{
			get
			{
				return this._idComCatEstadoCivil;
			}
			set
			{
				if ((this._idComCatEstadoCivil != value))
				{
					if (this._ComCatEstadoCivil.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatEstadoCivilChanging(value);
					this.SendPropertyChanging();
					this._idComCatEstadoCivil = value;
					this.SendPropertyChanged("idComCatEstadoCivil");
					this.OnidComCatEstadoCivilChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatRegimenMatrimonial", DbType="Int")]
		public System.Nullable<int> idComCatRegimenMatrimonial
		{
			get
			{
				return this._idComCatRegimenMatrimonial;
			}
			set
			{
				if ((this._idComCatRegimenMatrimonial != value))
				{
					if (this._ComCatRegimenMatrimonial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatRegimenMatrimonialChanging(value);
					this.SendPropertyChanging();
					this._idComCatRegimenMatrimonial = value;
					this.SendPropertyChanged("idComCatRegimenMatrimonial");
					this.OnidComCatRegimenMatrimonialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatOcupacion", DbType="Int")]
		public System.Nullable<int> idComCatOcupacion
		{
			get
			{
				return this._idComCatOcupacion;
			}
			set
			{
				if ((this._idComCatOcupacion != value))
				{
					if (this._ComCatOcupacion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatOcupacionChanging(value);
					this.SendPropertyChanging();
					this._idComCatOcupacion = value;
					this.SendPropertyChanged("idComCatOcupacion");
					this.OnidComCatOcupacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatNacionalidad", DbType="Int")]
		public System.Nullable<int> idComCatNacionalidad
		{
			get
			{
				return this._idComCatNacionalidad;
			}
			set
			{
				if ((this._idComCatNacionalidad != value))
				{
					if (this._ComCatNacionalidad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatNacionalidadChanging(value);
					this.SendPropertyChanging();
					this._idComCatNacionalidad = value;
					this.SendPropertyChanged("idComCatNacionalidad");
					this.OnidComCatNacionalidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatEstadoRegistro", DbType="Int NOT NULL")]
		public int idComCatEstadoRegistro
		{
			get
			{
				return this._idComCatEstadoRegistro;
			}
			set
			{
				if ((this._idComCatEstadoRegistro != value))
				{
					if (this._ComCatEstadoRegistro.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatEstadoRegistroChanging(value);
					this.SendPropertyChanging();
					this._idComCatEstadoRegistro = value;
					this.SendPropertyChanged("idComCatEstadoRegistro");
					this.OnidComCatEstadoRegistroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strNombre
		{
			get
			{
				return this._strNombre;
			}
			set
			{
				if ((this._strNombre != value))
				{
					this.OnstrNombreChanging(value);
					this.SendPropertyChanging();
					this._strNombre = value;
					this.SendPropertyChanged("strNombre");
					this.OnstrNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAPaterno", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string strAPaterno
		{
			get
			{
				return this._strAPaterno;
			}
			set
			{
				if ((this._strAPaterno != value))
				{
					this.OnstrAPaternoChanging(value);
					this.SendPropertyChanging();
					this._strAPaterno = value;
					this.SendPropertyChanged("strAPaterno");
					this.OnstrAPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strAMaterno", DbType="NVarChar(50)")]
		public string strAMaterno
		{
			get
			{
				return this._strAMaterno;
			}
			set
			{
				if ((this._strAMaterno != value))
				{
					this.OnstrAMaternoChanging(value);
					this.SendPropertyChanging();
					this._strAMaterno = value;
					this.SendPropertyChanged("strAMaterno");
					this.OnstrAMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strNombreCompleto", DbType="NVarChar(155)")]
		public string strNombreCompleto
		{
			get
			{
				return this._strNombreCompleto;
			}
			set
			{
				if ((this._strNombreCompleto != value))
				{
					this.OnstrNombreCompletoChanging(value);
					this.SendPropertyChanging();
					this._strNombreCompleto = value;
					this.SendPropertyChanged("strNombreCompleto");
					this.OnstrNombreCompletoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dteFechaNacimiento", DbType="DateTime")]
		public System.Nullable<System.DateTime> dteFechaNacimiento
		{
			get
			{
				return this._dteFechaNacimiento;
			}
			set
			{
				if ((this._dteFechaNacimiento != value))
				{
					this.OndteFechaNacimientoChanging(value);
					this.SendPropertyChanging();
					this._dteFechaNacimiento = value;
					this.SendPropertyChanged("dteFechaNacimiento");
					this.OndteFechaNacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idComCatSexo", DbType="Int NOT NULL")]
		public int idComCatSexo
		{
			get
			{
				return this._idComCatSexo;
			}
			set
			{
				if ((this._idComCatSexo != value))
				{
					if (this._ComCatSexo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidComCatSexoChanging(value);
					this.SendPropertyChanging();
					this._idComCatSexo = value;
					this.SendPropertyChanged("idComCatSexo");
					this.OnidComCatSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strCURP", DbType="NVarChar(50)")]
		public string strCURP
		{
			get
			{
				return this._strCURP;
			}
			set
			{
				if ((this._strCURP != value))
				{
					this.OnstrCURPChanging(value);
					this.SendPropertyChanging();
					this._strCURP = value;
					this.SendPropertyChanged("strCURP");
					this.OnstrCURPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strFolioIFE", DbType="NVarChar(50)")]
		public string strFolioIFE
		{
			get
			{
				return this._strFolioIFE;
			}
			set
			{
				if ((this._strFolioIFE != value))
				{
					this.OnstrFolioIFEChanging(value);
					this.SendPropertyChanging();
					this._strFolioIFE = value;
					this.SendPropertyChanged("strFolioIFE");
					this.OnstrFolioIFEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strOriginario", DbType="NVarChar(50)")]
		public string strOriginario
		{
			get
			{
				return this._strOriginario;
			}
			set
			{
				if ((this._strOriginario != value))
				{
					this.OnstrOriginarioChanging(value);
					this.SendPropertyChanging();
					this._strOriginario = value;
					this.SendPropertyChanged("strOriginario");
					this.OnstrOriginarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bitDocEstancia", DbType="Bit")]
		public System.Nullable<bool> bitDocEstancia
		{
			get
			{
				return this._bitDocEstancia;
			}
			set
			{
				if ((this._bitDocEstancia != value))
				{
					this.OnbitDocEstanciaChanging(value);
					this.SendPropertyChanging();
					this._bitDocEstancia = value;
					this.SendPropertyChanged("bitDocEstancia");
					this.OnbitDocEstanciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComPersona_ComDatoContacto", Storage="_ComDatoContacto", ThisKey="id", OtherKey="idComPersona")]
		public EntitySet<ComDatoContacto> ComDatoContacto
		{
			get
			{
				return this._ComDatoContacto;
			}
			set
			{
				this._ComDatoContacto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatEstadoCivil_ComPersona", Storage="_ComCatEstadoCivil", ThisKey="idComCatEstadoCivil", OtherKey="id", IsForeignKey=true)]
		public ComCatEstadoCivil ComCatEstadoCivil
		{
			get
			{
				return this._ComCatEstadoCivil.Entity;
			}
			set
			{
				ComCatEstadoCivil previousValue = this._ComCatEstadoCivil.Entity;
				if (((previousValue != value) 
							|| (this._ComCatEstadoCivil.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatEstadoCivil.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatEstadoCivil.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatEstadoCivil = value.id;
					}
					else
					{
						this._idComCatEstadoCivil = default(int);
					}
					this.SendPropertyChanged("ComCatEstadoCivil");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatEstadoRegistro_ComPersona", Storage="_ComCatEstadoRegistro", ThisKey="idComCatEstadoRegistro", OtherKey="id", IsForeignKey=true)]
		public ComCatEstadoRegistro ComCatEstadoRegistro
		{
			get
			{
				return this._ComCatEstadoRegistro.Entity;
			}
			set
			{
				ComCatEstadoRegistro previousValue = this._ComCatEstadoRegistro.Entity;
				if (((previousValue != value) 
							|| (this._ComCatEstadoRegistro.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatEstadoRegistro.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatEstadoRegistro.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatEstadoRegistro = value.id;
					}
					else
					{
						this._idComCatEstadoRegistro = default(int);
					}
					this.SendPropertyChanged("ComCatEstadoRegistro");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatNacionalidad_ComPersona", Storage="_ComCatNacionalidad", ThisKey="idComCatNacionalidad", OtherKey="id", IsForeignKey=true)]
		public ComCatNacionalidad ComCatNacionalidad
		{
			get
			{
				return this._ComCatNacionalidad.Entity;
			}
			set
			{
				ComCatNacionalidad previousValue = this._ComCatNacionalidad.Entity;
				if (((previousValue != value) 
							|| (this._ComCatNacionalidad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatNacionalidad.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatNacionalidad.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatNacionalidad = value.id;
					}
					else
					{
						this._idComCatNacionalidad = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComCatNacionalidad");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatOcupacion_ComPersona", Storage="_ComCatOcupacion", ThisKey="idComCatOcupacion", OtherKey="id", IsForeignKey=true)]
		public ComCatOcupacion ComCatOcupacion
		{
			get
			{
				return this._ComCatOcupacion.Entity;
			}
			set
			{
				ComCatOcupacion previousValue = this._ComCatOcupacion.Entity;
				if (((previousValue != value) 
							|| (this._ComCatOcupacion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatOcupacion.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatOcupacion.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatOcupacion = value.id;
					}
					else
					{
						this._idComCatOcupacion = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComCatOcupacion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatRegimenMatrimonial_ComPersona", Storage="_ComCatRegimenMatrimonial", ThisKey="idComCatRegimenMatrimonial", OtherKey="id", IsForeignKey=true)]
		public ComCatRegimenMatrimonial ComCatRegimenMatrimonial
		{
			get
			{
				return this._ComCatRegimenMatrimonial.Entity;
			}
			set
			{
				ComCatRegimenMatrimonial previousValue = this._ComCatRegimenMatrimonial.Entity;
				if (((previousValue != value) 
							|| (this._ComCatRegimenMatrimonial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatRegimenMatrimonial.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatRegimenMatrimonial.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatRegimenMatrimonial = value.id;
					}
					else
					{
						this._idComCatRegimenMatrimonial = default(Nullable<int>);
					}
					this.SendPropertyChanged("ComCatRegimenMatrimonial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ComCatSexo_ComPersona", Storage="_ComCatSexo", ThisKey="idComCatSexo", OtherKey="id", IsForeignKey=true)]
		public ComCatSexo ComCatSexo
		{
			get
			{
				return this._ComCatSexo.Entity;
			}
			set
			{
				ComCatSexo previousValue = this._ComCatSexo.Entity;
				if (((previousValue != value) 
							|| (this._ComCatSexo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ComCatSexo.Entity = null;
						previousValue.ComPersona.Remove(this);
					}
					this._ComCatSexo.Entity = value;
					if ((value != null))
					{
						value.ComPersona.Add(this);
						this._idComCatSexo = value.id;
					}
					else
					{
						this._idComCatSexo = default(int);
					}
					this.SendPropertyChanged("ComCatSexo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ComDatoContacto(ComDatoContacto entity)
		{
			this.SendPropertyChanging();
			entity.ComPersona = this;
		}
		
		private void detach_ComDatoContacto(ComDatoContacto entity)
		{
			this.SendPropertyChanging();
			entity.ComPersona = null;
		}
	}
}
#pragma warning restore 1591
